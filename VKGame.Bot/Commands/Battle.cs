using System;
using Newtonsoft.Json;
using System.IO;

namespace VKGame.Bot.Commands
{
    public class Battle : ICommand 
    {
        public string Name => "–ë–æ–π";
        public string Arguments => "(), (–≤–∞—Ä–∏–∞–Ω—Ç_–≤—ã–±–æ—Ä–∞)";
        public string Caption => "–†–∞–∑–¥–µ–ª –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –±–æ—ë–≤.";
        public TypeResponse Type => TypeResponse.Text;

        public object Execute(Models.Message msg) 
        {
            var messageArray = msg.body.Split(' ');
            if (messageArray.Length == 1)
                return GetBattleText(msg);
            else
            {
                var type = typeof(Battle);
                object obj = Activator.CreateInstance(type);
                var methods = type.GetMethods();
                foreach (var method in methods)
                {
                    var attributesCustom = Attribute.GetCustomAttributes(method);
                    foreach (var attribute in attributesCustom)
                    {
                        if (attribute.GetType() == typeof(Attributes.Trigger))
                        {
                            var myAtr = ((Attributes.Trigger)attribute);
                            if (myAtr.Name == messageArray[1])
                            {
                                object result = method.Invoke(obj, new object[] { msg });
                                return (string)result;
                            }
                        }
                    }
                }
            }
            return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–æ–¥–∫–æ–º–∞–Ω–¥–∞.";
        }

        public static class Api
        {
            public static long HpUser(long userId, Models.User user = null, Bot.Api.Builds builds = null )
            {
                if (builds == null) builds = new Bot.Api.Builds(userId);
                if (user == null) user = VKGame.Bot.Api.User.GetUser(userId);
                return (builds.Apartments * 10) + (builds.Eatery * 10) + (builds.Hangars * 50) +
                (builds.Mine * 10) + (builds.PowerGenerators * 50) + (builds.WarehouseEat * 30) +
                (builds.WarehouseEnergy * 20) + (builds.WarehouseWater * 10) +
                (builds.WaterPressureStation * 50) + (user.Level * 100);
            }

            public static bool JoinBattle(long battleId, long userId, Models.User user = null, Bot.Api.Battles battle = null)
            {
                if (user == null) user = Bot.Api.User.GetUser(userId);

                var userHp = Api.HpUser(userId, user);
                if (battle == null) battle = new Bot.Api.Battles(battleId);
                battle.UserTwo = userId;
                battle.HpTwo = userHp;
                battle.IsStart = true;
               
                Statistics.JoinBattle();

                return true;
            }

            public static bool RemoveListBattle(long battleId)
            {
                var listBattle = Bot.Api.Battles.GetListBattles();
                listBattle.Battles.Remove(battleId);
                Bot.Api.Battles.SetListBattles(listBattle);
                return true;
            }

            public static bool AddToListBattles(long battleId)
            {
                var ListBattles = VKGame.Bot.Api.Battles.GetListBattles();
                if (ListBattles.Battles == null) ListBattles.Battles = new System.Collections.Generic.List<long>();
                ListBattles.Battles.Add(battleId);
                VKGame.Bot.Api.Battles.SetListBattles(ListBattles);
                return true;
            }

            public static long CreateBattle(long userCreate, string body, int price, Models.User user= null)
            {
                if (user == null) user = VKGame.Bot.Api.User.GetUser(userCreate);
                long userHp = Api.HpUser(userCreate,user);
                var builds = new Bot.Api.Builds(userCreate);
                var battleId = VKGame.Bot.Api.Battles.NewBattle(userCreate, body, userHp, price);
               
                Notifications.RemovePaymentCard(price, userCreate, "–°–æ–∑–¥–∞–Ω–∏–µ –±–∏—Ç–≤—ã");
                return battleId;
            }
        }  

        [Attributes.Trigger("–±–æ—Ç")]
        public static string BotPlay(Models.Message msg)
        {
            //—Å–æ–∑–¥–∞–Ω–∏–µ –±–∏—Ç–≤—ã
            var messageArray = msg.body.Split(' ');
            int price = 0;
            try
            {
                price = Convert.ToInt32(messageArray[2]);
            }catch(IndexOutOfRangeException)
            {
                return "‚ùå –í—ã –Ω–µ —É–∞–∑–∞–ª–∏ —Å—É–º–º—É!";
            }catch(FormatException)
            {
                return "‚ùå –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—É–º–º—É";
            }
            var user = Bot.Api.User.GetUser(msg.from_id);
            var registry = Bot.Api.Registry.GetRegistry(user.Id);
            var resources = new Bot.Api.Resources(user.Id);
            if (resources.MoneyCard < price) return $"‚ùå –í—ã —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É –±–æ–ª—å—à–µ, —á–µ–º —É –≤–∞—Å –µ—Å—Ç—å! –í–∞—à –±–∞–ª–∞–Ω—Å: {resources.MoneyCard}";
            ++registry.CountCreateBattles;
            if(resources.MoneyCard < price)
            if (user.IdBattle != 0) return $"‚ùå –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥—Ä—É–≥–æ–π –±–∏—Ç–≤–µ. Id –±–∏—Ç–≤—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å: {user.IdBattle}. –ß—Ç–æ–±—ã –ø–æ–∫–∏–Ω—É—Ç—å —Ç—É –±–∏—Ç–≤—É, –Ω–∞–ø–∏—à–∏—Ç–µ: –±–æ–π –ø–æ–∫–∏–Ω—É—Ç—å";
            var idBattle = Api.CreateBattle(user.Id, "–ë–æ–π —Å –±–æ—Ç–æ–º", price, user);
            user.IdBattle = idBattle;
            Bot.Api.User.SetUser(user);
            Bot.Api.Registry.SetRegistry(registry);

            //–ë–æ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –±–∏—Ç–≤–µ
            var battle = new Bot.Api.Battles(idBattle);
            battle.UserTwo = 16101;
            battle.HpTwo = Api.HpUser(user.Id, user);
            battle.IsStart = true;
            return "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ –Ω–æ–≤—É—é –±–∏—Ç–≤—É! –í—ã –∞—Ç–∞–∫—É–µ—Ç–µ –ø–µ—Ä–≤—ã–π! " +
                "\n‚ùì –ö–∞–∫ –∞—Ç–∞–∫–æ–≤–∞—Ç—å: –±–æ–π –∞—Ç–∞–∫–∞ –∫–æ–ª-–≤–æ —Ç–∏–ø_–≤–æ–π—Å–∫–∞" +
                "\n‚ùó –ü—Ä–∏–º–µ—Ä: –±–æ–π –∞—Ç–∞–∫–∞ 10 —Å–æ–ª–¥–∞—Ç" +
                "\n‚ùó –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –≤–æ–π—Å–∫: —Å–æ–ª–¥–∞—Ç –∏ —Ç–∞–Ω–∫–æ–≤";
        }

        private static void BotAttack(long BattleId)
        {
            var battle = new Bot.Api.Battles(BattleId);
            long[] HpArray =
            {
                40, 50,60, 80, 90, 100,140, 160, 200,210
            };
            var r = new Random();
            long Hp = HpArray[r.Next(0, HpArray.Length - 1)];

            var userHp = battle.HpOne;

            userHp = userHp - Hp;
            battle.HpOne = userHp;
            battle.UserCourse = battle.UserOne;
            Bot.Api.MessageSend($"ü§î –í–∞–º –Ω–∞–Ω–µ—Å–ª–∏ {Hp} —É—Ä–æ–Ω–∞! –°—Ä–æ—á–Ω–æ –æ—Ç–≤–µ—á–∞–π—Ç–µ!" +
                $"\n‚ùì –ö–∞–∫ –∞—Ç–∞–∫–æ–≤–∞—Ç—å: –±–æ–π –∞—Ç–∞–∫–∞ –∫–æ–ª-–≤–æ —Ç–∏–ø_–≤–æ–π—Å–∫–∞" +
                $"\n‚ùó –ü—Ä–∏–º–µ—Ä: –±–æ–π –∞—Ç–∞–∫–∞ 10 —Å–æ–ª–¥–∞—Ç" +
                $"\n‚ùó –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –≤–æ–π—Å–∫: —Å–æ–ª–¥–∞—Ç –∏ —Ç–∞–Ω–∫–æ–≤", battle.UserOne);
            if(userHp < 0 || userHp == 0)
            {
                var user = Bot.Api.User.GetUser(battle.UserOne);
                user.IdBattle = 0;
                Bot.Api.User.SetUser(user);
                Bot.Api.MessageSend("üò• :( –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!", battle.UserOne);
            }
        } 
        

        [Attributes.Trigger("–∞—Ç–∞–∫–∞")]
        public static string Attack(Models.Message msg) 
        {
            var messageArray = msg.body.Split(' ');
            var user = Bot.Api.User.GetUser(msg.from_id);
            var resources = new Bot.Api.Resources(user.Id);
            
            if(user.IdBattle == 0 ) return "‚ùå –í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –Ω–∏ –≤ –∫–∞–∫–æ–π –±–∏—Ç–≤–µ. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π: –±–æ–π —Å–ø–∏—Å–æ–∫  –∏–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é: –±–æ–π —Å–æ–∑–¥–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–Ω–∞";
            var battle = new Bot.Api.Battles(user.IdBattle);
            if(battle.UserCourse != user.Id) return "‚ùå –°–µ–π—á–∞—Å —Ö–æ–¥ –í–∞—à–µ–≥–æ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞.";
            int countArmy = 0;
            try 
            {
                countArmy = Int32.Parse(messageArray[2]);
            }catch (FormatException) 
            {
                return "‚ùå –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ —á–∏—Å–ª–æ.";
            }catch(IndexOutOfRangeException) 
            {
                return "‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —á–∏—Å–ª–æ!";
            }

            string type = "";
            try {
                type = messageArray[3].ToLower();
            }catch(IndexOutOfRangeException) 
            {
                return "‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ç–∏–ø –≤–æ–π—Å–∫–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –≤–æ–π—Å–∫: —Å–æ–¥–∞–ª–¥–∞—Ç –∏  —Ç–∞–Ω–∫–æ–≤";
            }
            var r = new Random();
             
            int countHP = 0;
            if(type == "—Å–æ–ª–¥–∞—Ç") 
            {
                if(countArmy > resources.Soldiery) return $"‚ùå –£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–æ–ª–¥–∞—Ç. –£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å —Å–æ–ª–¥–∞—Ç: {resources.Soldiery}. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –æ–±—É—á–∏—Ç—å –Ω–æ–≤—ã—Ö!";

                countHP = countArmy * 10;
                if (countHP > 300) return "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–Ω–æ—Å–∏—Ç—å –±–æ–ª—å—à–µ 300 —É—Ä–æ–Ω–∞ –∑–∞ —Ä–∞–∑!";
                var food = resources.Food;
                var soldiery = resources.Soldiery;
                resources.Soldiery = soldiery - countArmy;
                var countFoodForSoldiery = countArmy * 5;
                if (countFoodForSoldiery > food) return $"‚ùå –£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –µ–¥—ã, —á—Ç–æ–±—ã –ø—Ä–æ–∫–æ—Ä–º–∏—Ç—å –∞—Ä–º–∏—é! –í–∞—à–∏ –∑–∞–ø–∞—Å—ã: {food}. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –µ–¥—ã: {countFoodForSoldiery}. –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –µ–¥—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∏–ª–∏ –ø–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–∫–∞ –æ–Ω–∞ –ø–æ—è–≤–∏—Ç—Å—è —Å–∞–º–∞.";
                food -= countFoodForSoldiery;
                resources.Food = food;
            }else if( type == "—Ç–∞–Ω–∫–æ–≤") 
            {
                if(countArmy > resources.Tanks) return $"‚ùå –£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–∞–Ω–∫–æ–≤. –£ –í–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å —Ç–∞–Ω–∫–æ–≤: {resources.Tanks}. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã—Ö!";
                countHP = countArmy * 100;
                if (countHP > 500) return "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∞–Ω–æ—Å–∏—Ç—å –±–æ–ª—å—à–µ 500 —É—Ä–æ–Ω–∞ –∑–∞ —Ä–∞–∑!";
                var tanks = resources.Tanks;
                var water = resources.Water;
                resources.Tanks = tanks - countArmy;
                var countWaterForTanks = countArmy * 5;
                if (countWaterForTanks > resources.Water) return $"‚ùå –û–ì–û! –£ –í–∞—Å –∫–æ–Ω—á–∏–ª–∞—Å—å –≤–æ–¥–∞! –û—Å—Ç–∞–ª–æ—Å—å: {resources.Water}. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ: {countWaterForTanks} –ê –∫–∞–∫ —Ç–∞–Ω–∫–∏ –±—É–¥—É—Ç –µ–∑–¥–∏—Ç—å –±–µ–∑ —Ç–æ–ø–ª–∏–≤–∞-—Ç–æ??? –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –≤–æ–¥—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∏–ª–∏ –ø–æ–¥–æ–∂–¥–∞—Ç—å –ø–æ–∫–∞ –æ–Ω–∞ –ø–æ—è–≤–∏—Ç—Å—è —Å–∞–º–∞.";
                water = water - countWaterForTanks;
                resources.Water = water;

            }
            else return "‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∞—Ä–º–∏–∏. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –∞—Ä–º–∏–∏: —Ç–∞–Ω–∫–æ–≤ –∏ —Å–æ–ª–¥–∞—Ç";

            long enemy = 0;
            long hpEnemy = 0;
            long hpMy = 0;
            long enemyNumber = 0;
            if (user.Id == battle.UserOne)
            {
                enemy = battle.UserTwo;
                hpEnemy = battle.HpTwo;
                hpMy = battle.HpOne;
                enemyNumber = 2;
            }
            else if (user.Id == battle.HpTwo)
            {
                enemy = battle.UserOne;
                hpEnemy = battle.HpOne;
                hpMy = battle.HpTwo;
                enemyNumber = 1;
            }
                hpEnemy -= countHP;
                if (hpEnemy < 0 || hpEnemy == 0)
                {
                    
                    if (user.Competition == 0)
                        Notifications.EnterPaymentCard(Convert.ToInt32(battle.Price * 2), user.Id, "–ø–æ–±–µ–¥–∞ –≤ –±–∏—Ç–≤–µ");
                    user.IdBattle = 0;
                    var registry = Bot.Api.Registry.GetRegistry(user.Id);
                    ++registry.CountWinBattles;
                    ++registry.CountBattles;
                    user.Experience = user.Experience + 10;
                    Bot.Api.Registry.SetRegistry(registry);
                    Bot.Api.User.SetUser(user);
                    if (enemy != 16101)
                    {
                    var refistryTwo = Bot.Api.Registry.GetRegistry(enemy);
                        var userTwo = Bot.Api.User.GetUser(enemy);
                        userTwo.IdBattle = 0;
                        ++refistryTwo.CountBattles;
                        Bot.Api.User.SetUser(userTwo);
                        Bot.Api.Registry.SetRegistry(refistryTwo);
                    }
                    int shance = r.Next(1, 4);
                    Quests.WinBattle(user.Id);
                    string WinText = "‚ú®üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –ø–æ–±–µ–¥–∏–ª–∏! –í—ã —É–Ω–∏—á—Ç–æ–∂–∏–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞! –ó–∞ —ç—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —Ñ–æ–Ω–¥ –±–∏—Ç–≤—ã!";
                    if (shance == 4)
                    {
                        Statistics.WinBox();
                        WinText += "\n üéà –í–∞–º –≤—ã–ø–∞–ª –±–∏—Ç–≤–µ–Ω–Ω—ã–π –∫–µ–π—Å!";
                        var boxes = new Bot.Api.Boxes(user.Id);
                        var battleList = boxes.BattleBox;
                        battleList.Add(new Models.BattleBox());
                        boxes.BattleBox = battleList;
                    }
                    Statistics.WinBattle();
                    if (battle.UserTwo != 16101) Bot.Api.MessageSend("‚ùå–ü–û–†–ê–ñ–ï–ù–ò–ï! –í–ê–° –£–ù–ò–ß–¢–û–ñ–ò–õ–ò! –í —Å–ª–µ–¥—É—é—â–µ–º –±–æ—é –í–∞–º –ø–æ–≤–µ–∑—ë—Ç –±–æ–ª—å—à–µ!", battle.UserTwo);
                    if (user.Competition != 0)
                    {
                        Competitions.EndBattle(user.Id, battle.UserTwo, user.Competition, battle.Id);
                    }
                    return WinText;
                }
                else 
                {
                    if(enemyNumber ==1)
                {
                    battle.HpOne = hpEnemy;
                }else if(enemyNumber == 2)
                {
                    battle.HpTwo = hpEnemy;
                }
                   
                    battle.UserCourse = battle.UserTwo;
                    if (battle.UserTwo == 16101)
                    {
                        BotAttack(battle.Id);
                    }else
                    {
                        Bot.Api.MessageSend($"‚ùå –í–∞–º –Ω–∞–Ω–µ—Å–ª–∏ {countHP} —É—Ä–æ–Ω–∞! –û—Å—Ç–∞–ª–æ—Å—å —Ö–ø: {battle.HpTwo}. –¢–µ–ø–µ—Ä—å –í–∞—à–∞ –æ—á–µ—Ä–µ–¥—å –∞—Ç–∞–∫–æ–≤–∞—Ç—å!" +
                            $"\n‚ùì –ö–∞–∫ –∞—Ç–∞–∫–æ–≤–∞—Ç—å: –±–æ–π –∞—Ç–∞–∫–∞ –∫–æ–ª-–≤–æ —Ç–∏–ø_–≤–æ–π—Å–∫–∞" +
                            $"\n‚ùó –ü—Ä–∏–º–µ—Ä: –±–æ–π –∞—Ç–∞–∫–∞ 10 —Å–æ–ª–¥–∞—Ç" +
                            $"\n‚ùó –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –≤–æ–π—Å–∫: —Å–æ–ª–¥–∞—Ç –∏ —Ç–∞–Ω–∫–æ–≤", enemy);
                    }
                    return $"‚úÖ –í—ã –Ω–∞–Ω–µ—Å–ª–∏ {countHP} —É—Ä–æ–Ω–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É! –û—Å—Ç–∞—Ç–æ–∫ —Ö–ø –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {battle.HpTwo}.";
                } 
        }
        private string GetBattleText(Models.Message msg) 
        {
            var user = Bot.Api.User.GetUser(msg.from_id);
            return $"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ"+
                   $"\n‚úã –ü—Ä–∏–≤–µ—Ç, {user.Name}!"+
                   $"\n" +
                   $"\n‚öî –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –±–æ–π - –ø–æ—Å–º–æ—Ç—Ä–∏ —Å–ø–∏—Å–æ–∫ –±–æ—ë–≤! –ù–∞–ø–∏—à–∏: –±–æ–π —Å–ø–∏—Å–æ–∫" +
                   $"\nüõ° –ù–µ —Ö–æ—á–µ—à—å –≤—Å—Ç—É–ø–∞—Ç—å –≤ –±–æ–π? –°–æ–∑–¥–∞–π —Å–≤–æ–π! –ù–∞–ø–∏—à–∏: –±–æ–π —Å–æ–∑–¥–∞—Ç—å —Å—É–º–º–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ" +
                   $"\nüòé –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–π –±–∏—Ç–≤—ã? –ü–æ–∏–≥—Ä–∞–π —Å –±–æ—Ç–æ–º! –ù–∞–ø–∏—à–∏: –±–æ–π –±–æ—Ç —Å—É–º–º–∞"+
                   $"\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ";

        }

        [Attributes.Trigger("–≤—Å—Ç—É–ø–∏—Ç—å")]
        public static string JoinToBattle(Models.Message msg) 
        {
            var messageArray = msg.body.Split(' ');
            var idBattle = 0;
            try {
                 idBattle = Convert.ToInt32(messageArray[2]);
            }catch(FormatException) {
                return "‚ùå –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID";
            }catch(IndexOutOfRangeException) 
            {
                return "‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ ID";
            }
            if(!Bot.Api.Battles.Check(idBattle)) return "‚ùå –¢–∞–∫–æ–π –±–∏—Ç–≤—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç";
            var battle = new Bot.Api.Battles(idBattle);
            var user = Bot.Api.User.GetUser(msg.from_id);
            var resources = new Bot.Api.Resources(user.Id);
            var builds = new Bot.Api.Builds(user.Id);
            if(battle.Creator == user.Id) return "‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Å–≤–æ—é –∂–µ –±–∏—Ç–≤—É.";
            if(user.IdBattle != 0) return $"‚ùå –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥—Ä—É–≥–æ–π –±–∏—Ç–≤–µ c ID - {user.IdBattle}";
            
                if(battle.IsStart) return "‚ùå –≠—Ç–∞ –±–∏—Ç–≤–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤ –Ω–µ—ë –≤—Å—Ç—É–ø–∏—Ç—å.";
                if(battle.Id == Convert.ToInt64(idBattle)) 
                {
                    if(resources.MoneyCard < battle.Price) return $"‚ùå –ù–∞ –í–∞—à–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç. –í–∞—à –±–∞–ª–∞–Ω—Å: {resources.MoneyCard}";
                    Notifications.RemovePaymentCard(Convert.ToInt32(battle.Price), user.Id, "–±–∏—Ç–≤—ã");
                    Api.JoinBattle(battle.Id, user.Id, user, battle);
                    user.IdBattle = battle.Id;
                    Api.RemoveListBattle(battle.Id);
                    if(!Bot.Api.User.SetUser(user)) return "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –ë–î. –í—ã –Ω–µ –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª–∏—Å—å –∫ –±–∏—Ç–≤–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ";
                    Bot.Api.MessageSend("‚Äº –ö –í–∞–º –≤ –±–∏—Ç–≤—É –≤—Å—Ç—É–ø–∏–ª–∏! –í—ã –∞—Ç–∞–∫—É–µ—Ç–µ –ø–µ—Ä–≤—ã–π! " +
                    "\n‚ùì –ö–∞–∫ –∞—Ç–∞–∫–æ–≤–∞—Ç—å: –±–æ–π –∞—Ç–∞–∫–∞ –∫–æ–ª-–≤–æ —Ç–∏–ø_–≤–æ–π—Å–∫–∞" +
                    "\n‚ùó –ü—Ä–∏–º–µ—Ä: –±–æ–π –∞—Ç–∞–∫–∞ 10 —Å–æ–ª–¥–∞—Ç" +
                    "\n‚ùó –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –≤–æ–π—Å–∫: —Å–æ–ª–¥–∞—Ç –∏ —Ç–∞–Ω–∫–æ–≤", battle.Creator);
                return "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —ç—Ç—É –±–∏—Ç–≤—É! –í—Ä–∞–≥ –∞—Ç–∞–∫—É–µ—Ç –ø–µ—Ä–≤—ã–π.";
                }
            return "‚ùå –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π ID";
        }

        [Attributes.Trigger("–ø–æ–∫–∏–Ω—É—Ç—å")]
        public static string Leave(Models.Message msg) 
        {
            var user = Bot.Api.User.GetUser(msg.from_id);
            if(user.IdBattle == 0) return "–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∏ –≤ –∫–∞–∫–æ–π –±–∏—Ç–≤–µ.";
            var battle = new Bot.Api.Battles(user.IdBattle);
            user.IdBattle = 0;
            Bot.Api.User.SetUser(user);
            
            long userwo = 0 ;
            if(battle.UserOne == user.Id) userwo = battle.UserTwo;
            else if(battle.UserTwo == user.Id) userwo = battle.UserOne;
            
            if(userwo != 16101)
            {
                if (userwo != 0)
                {
                    var userTwo = Bot.Api.User.GetUser(userwo);
                    userTwo.IdBattle = 0;
                    Bot.Api.User.SetUser(userTwo);
                    Notifications.EnterPaymentCard(System.Convert.ToInt32(battle.Price * 2), userwo, "–ü–æ–±–µ–¥–∞ –≤ –±–∏—Ç–≤–µ");
                    Bot.Api.MessageSend("–í–∞—à –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Ç—Ä—É—Å–ª–∏–≤–æ —Å–±–µ–∂–∞–ª! –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –≤–µ—Å—å —Ñ–æ–Ω–¥!", userwo);
                }
            } 
            
            return "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–Ω—É–ª–∏ –±–∏—Ç–≤—É :( –ü–ª–æ—Ö–æ —Ç–∞–∫ –¥–µ–ª–∞—Ç—å!";
        }

        [Attributes.Trigger("–º–æ–π")]
        public static string MyBattle(Models.Message msg) 
        {
            var user = Bot.Api.User.GetUser(msg.from_id);
            if(user.IdBattle == 0) return "‚ùå –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∏ –≤ –∫–∞–∫–æ–π –±–∏—Ç–≤–µ.";
            var battle = new Bot.Api.Battles(user.IdBattle);
            Models.User userCreator = null;

            if (battle.Creator != user.Id)
            {
                userCreator = Bot.Api.User.GetUser(battle.Creator);
            }else
            {
                userCreator = user;
            }

            string result = $"‚öî –ë–∏—Ç–≤–∞ ‚Ññ{battle.Id}.\n ‚û° –ù–∞–∑–≤–∞–Ω–∏–µ: {battle.Body}." +
                          $"\nüòÄ –°–æ–∑–¥–∞—Ç–µ–ª—å: [id{userCreator.Id}|{userCreator.Name}]" +
                          $"\nüîù –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {userCreator.Level}" +
                          $"\nüõ° HP –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {battle.HpOne}" +
                          $"\nüí∞ –°—Ç–∞–≤–∫–∞: {battle.Price}";

            return result;
        }

        [Attributes.Trigger("—Å–æ–∑–¥–∞—Ç—å")]
        public static string CreateBattle(Models.Message msg) 
        {
            var messageArray = msg.body.Split(' ');
            Statistics.CreateBattle();

            var price = 0;
            try {
                price = Convert.ToInt32(messageArray[2]);
            } catch(FormatException) {
                return "‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—É–º–º—É.";
            } catch(IndexOutOfRangeException) 
            {
                return "‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Ü–µ–Ω—É.";
            }
            string body = "";
            try {
                for (int i = 3; messageArray.Length > i; i++)
                {
                    body += $"{messageArray[i]} ";
                }
            }catch(IndexOutOfRangeException) 
            {
                body = "–ë–æ–π –Ω–∞ —Å–º–µ—Ä—Ç—å";
            }
            var user = VKGame.Bot.Api.User.GetUser(msg.from_id);
            var resources = new Bot.Api.Resources(user.Id);
            if (user.IdBattle != 0) return $"‚ùå –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥—Ä—É–≥–æ–π –±–∏—Ç–≤–µ c ID - {user.IdBattle}.";
            if (resources.MoneyCard < price) return $"‚ùå –í—ã —Å—Ç–∞–≤–∏—Ç–µ –¥–µ–Ω–µ–≥ –±–æ–ª—å—à–µ, —á–µ–º —É –í–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –í–∞—à –±–∞–ª–∞–Ω—Å: {resources.MoneyCard} üí≥ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–µ–Ω—å–≥–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –∫–∞–∑–∏–Ω–æ";
            var battleId = Api.CreateBattle(user.Id, body, price, user);
            var registry = Bot.Api.Registry.GetRegistry(user.Id);
            ++registry.CountCreateBattles;
            user.IdBattle = battleId;
            Api.AddToListBattles(battleId);
            Bot.Api.Registry.SetRegistry(registry);
            if (!VKGame.Bot.Api.User.SetUser(user)) return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î. –ù–æ –±–∏—Ç–≤–∞ —Å–æ–∑–¥–∞–ª–∞—Å—å –Ω–∞–≤–µ—Ä–Ω–æ–µ. –ù–æ –í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ –±–∏—Ç–≤—É.";
            return "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ –Ω–æ–≤—É—é –±–∏—Ç–≤—É! –¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ–¥–æ–∂–¥–∞—Ç—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞.";
        }

        [Attributes.Trigger("—Å–ø–∏—Å–æ–∫")]
        public static string ListBattles(Models.Message msg) 
        {
            string json =  "";
            using(var reader = new StreamReader(@"Files/Battles.json")) 
            {
                json = reader.ReadToEnd();
            }
            var model = JsonConvert.DeserializeObject<Models.ActiveBattles>(json);      
            string result = "C–ü–ò–°–û–ö –ë–ò–¢–í‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n";
            if(model.Battles.Count == 0) return "üòí –°–ø–∏—Å–æ–∫ –±–∏—Ç–≤ –ø—É—Å—Ç. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –±–∏—Ç–≤—É!";
            foreach(var battleId in model.Battles) 
            {
                var battle = new Bot.Api.Battles(battleId);
                var user = VKGame.Bot.Api.User.GetUser(battle.Creator);
                result +=   $"‚öî –ë–∏—Ç–≤–∞ ‚Ññ{battle.Id}.\n ‚û° –ù–∞–∑–≤–∞–Ω–∏–µ: {battle.Body}."+
                          $"\nüßë –°–æ–∑–¥–∞—Ç–µ–ª—å: [id{user.Id}|{user.Name}]"+
                          $"\nüîù –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {user.Level}"+
                          $"\nüõ° HP –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {battle.HpOne}"+
                          $"\nüí∞ –°—Ç–∞–≤–∫–∞: {battle.Price}"+
                          $"\nüí• –ß—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ —ç—Ç—É –±–∏—Ç–≤—É, –Ω–∞–ø–∏—à–∏—Ç–µ: –±–æ–π –≤—Å—Ç—É–ø–∏—Ç—å {battle.Id}"+
                          $"\n"+
                          $"\n";                   
            }
            result+= "\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ";
            return result;
        }
    }
}